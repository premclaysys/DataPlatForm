{
	"name": "PL_ImportLoanTransactionData",
	"properties": {
		"activities": [
			{
				"name": "CheckingLoanTransactionFiles",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ds_blob_csv_LoanTransactionSource",
						"type": "DatasetReference"
					},
					"fieldList": [
						"childItems",
						"lastModified"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "IfFilesExists",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "ForEachChildItem",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@activity('CheckingLoanTransactionFiles').output.exists",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "LoanTransactionDataImportToStaging",
							"type": "ExecuteDataFlow",
							"dependsOn": [
								{
									"activity": "TruncateStagingTable",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataflow": {
									"referenceName": "df_LoanTransactionDataImport",
									"type": "DataFlowReference"
								},
								"compute": {
									"coreCount": 8,
									"computeType": "General"
								},
								"traceLevel": "Fine"
							}
						},
						{
							"name": "ImportDataToLoanTransaction",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "LoanTransactionDataImportToStaging",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[Sp_LoanTransactionLoading]"
							},
							"linkedServiceName": {
								"referenceName": "ls_sql_msu_realtimedb",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "TruncateStagingTable",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": "Truncate table loantransaction_staging;\nselect count(LoanTransaction_stagingID) from loantransaction_staging;",
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "ds_db_LoanTransactionStaging",
									"type": "DatasetReference"
								},
								"firstRowOnly": false
							}
						}
					]
				}
			},
			{
				"name": "ForEachChildItem",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "CheckingLoanTransactionFiles",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('CheckingLoanTransactionFiles').output.childItems",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Get ModifiedDateoftheCurrentFile",
							"type": "GetMetadata",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "ds_blob_csv_LoanTransactionSource",
									"type": "DatasetReference"
								},
								"fieldList": [
									"itemName",
									"lastModified"
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							}
						},
						{
							"name": "If CurrentModifiedDate greater than PrevDate",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Get ModifiedDateoftheCurrentFile",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@less(ticks(activity('Get ModifiedDateoftheCurrentFile').output.lastModified),ticks(formatDateTime(variables('smallestmodifieddate'))))",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "Set currentmodifieddate",
										"type": "SetVariable",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"variableName": "smallestmodifieddate",
											"value": {
												"value": "@activity('Get ModifiedDateoftheCurrentFile').output.lastModified",
												"type": "Expression"
											}
										}
									},
									{
										"name": "Set First file",
										"type": "SetVariable",
										"dependsOn": [
											{
												"activity": "Set currentmodifieddate",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"userProperties": [],
										"typeProperties": {
											"variableName": "filename",
											"value": {
												"value": "@activity('Get ModifiedDateoftheCurrentFile').output.itemName",
												"type": "Expression"
											}
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "Logging Errors",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Error in LoanTransactionFiles",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Error in Modified date",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Error if file does not exist",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[Sp_LogPipelineExecutionDetails]",
					"storedProcedureParameters": {
						"ErrorMessage": {
							"value": {
								"value": "@activity('CheckingLoanTransactionFiles').Error.message",
								"type": "Expression"
							},
							"type": "String"
						},
						"lastModifieddate": {
							"value": {
								"value": "@activity('CheckingLoanTransactionFiles').output.lastModified",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"PipelineName": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						},
						"PipelineStartTime": {
							"value": {
								"value": "@pipeline().TriggerTime",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"sourcefilename": {
							"value": {
								"value": "@activity('Get ModifiedDateoftheCurrentFile').output.itemName",
								"type": "Expression"
							},
							"type": "String"
						},
						"Status": {
							"value": {
								"value": "@pipeline().parameters.pStatus",
								"type": "Expression"
							},
							"type": "String"
						},
						"ErrorMessage1": {
							"value": {
								"value": "@activity('ForEachChildItem').Error.message",
								"type": "Expression"
							},
							"type": "String"
						},
						"ErrorMessage2": {
							"value": {
								"value": "@activity('IfFilesExists').Error.message",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ls_sql_msu_realtimedb",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Error in LoanTransactionFiles",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "CheckingLoanTransactionFiles",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "ErrorMessage",
					"value": {
						"value": "@activity('CheckingLoanTransactionFiles').Error.message",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Error in Modified date",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "ForEachChildItem",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "ErrorMessage",
					"value": {
						"value": "@activity('ForEachChildItem').Error.message",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Error if file does not exist",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "IfFilesExists",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "ErrorMessage",
					"value": {
						"value": "@activity('IfFilesExists').Error.message",
						"type": "Expression"
					}
				}
			}
		],
		"concurrency": 1,
		"parameters": {
			"pStatus": {
				"type": "string",
				"defaultValue": "failed"
			}
		},
		"variables": {
			"filename": {
				"type": "String"
			},
			"currentmodifieddate": {
				"type": "String"
			},
			"smallestmodifieddate": {
				"type": "String",
				"defaultValue": "@{utcnow()}"
			},
			"ErrorMessage": {
				"type": "String"
			}
		},
		"annotations": []
	}
}